{"version":3,"sources":["services/login.js","services/blogs.js","reducers/notificationReducer.js","reducers/userReducer.js","components/LoginForm.js","reducers/blogReducer.js","components/BlogsForm.js","components/Notification.js","components/Toggleable.js","components/BlogList.js","services/users.js","reducers/allUsersReducer.js","components/Users.js","components/UserView.js","components/BlogView.js","App.js","store.js","index.js"],"names":["login","credentials","a","axios","post","response","data","baseUrl","token","functions","getAll","get","create","newBlog","config","headers","Authorization","setToken","newToken","update","id","updatedBlog","put","remove","delete","addComment","comment","timeoutid","changeNotification","message","duration","dispatch","clearTimeout","type","setTimeout","notificationReducer","state","action","userReducer","LoginForm","useState","username","setUsername","password","setPassword","useDispatch","onSubmit","event","loginInfo","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","blogService","TextField","label","value","name","onChange","target","Button","variant","color","commentBlog","blog","commentedBlog","deleteBlog","title","likeBlog","likes","initializeBlogs","blogs","blogReducer","map","x","filter","comments","Blogs","toggleVisibility","setTitle","author","setAuthor","url","setUrl","onClick","Notification","useSelector","notification","includes","Alert","className","severity","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","style","buttonLabel","children","displayName","BlogList","TableContainer","component","Paper","maxHeight","overflow","background","Table","TableBody","TableRow","TableCell","sort","y","to","initializeUsers","usersService","users","allUsersReducer","Users","allUsers","useEffect","length","UserView","List","ListItem","BlogView","setComment","history","useHistory","like","confirm","push","href","rel","fullWidth","i","App","blogsFormRef","useRef","loggedUserJSON","getItem","parse","initializeUser","usermatch","useRouteMatch","userToView","find","params","blogmatch","blogToView","Container","AppBar","position","Toolbar","Link","clear","path","BlogsForm","current","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82a25672.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl,credentials)\r\n  return response.data\r\n}\r\n\r\nexport default login","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newBlog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, updatedBlog) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, updatedBlog)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`,config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (id,comment) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`,comment)\r\n  return response.data\r\n}\r\n\r\nconst functions = { getAll, create, setToken, update, remove, addComment }\r\nexport default functions","const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n  case 'NOTIFICATION_CHANGE':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\nlet timeoutid = 0\r\nexport const changeNotification = (message, duration) => {\r\n  return async dispatch => {\r\n    clearTimeout(timeoutid)\r\n    dispatch({\r\n      type: 'NOTIFICATION_CHANGE',\r\n      data: message\r\n    })\r\n    timeoutid = setTimeout(() => {\r\n      dispatch({\r\n        type: 'NOTIFICATION_CHANGE',\r\n        data: ''\r\n      }\r\n      )\r\n    }, 1000 * duration)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { changeNotification } from './notificationReducer'\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOGIN_USER':\r\n    return action.data\r\n  case 'LOGOUT_USER':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const loginUser = loginInfo => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginService(loginInfo)\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'LOGIN_USER',\r\n        data: user\r\n      })\r\n      dispatch(changeNotification(`${user.username} logged in succesfully`, 5))\r\n    } catch (excpetion) {\r\n      dispatch(changeNotification('Logged in failed or incorrect username or password', 5))\r\n    }\r\n  }}\r\n\r\nexport const initializeUser = () => {\r\n  const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n  if (loggedUserJSON) {\r\n    const user = JSON.parse(loggedUserJSON)\r\n    blogService.setToken(user.token)\r\n    return  {\r\n      type: 'LOGIN_USER',\r\n      data: user\r\n    }\r\n  }\r\n  return {\r\n    type: 'LOGOUT_USER'\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  window.localStorage.clear()\r\n  return {\r\n    type: 'LOGOUT_USER'\r\n  }\r\n}\r\n\r\nexport default userReducer","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../reducers/userReducer'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    dispatch(loginUser({\r\n      username: username,\r\n      password: password\r\n    }))\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log in to application</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <TextField\r\n            label=\"username\"\r\n            id='username'\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}/>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"password\"\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)} />\r\n        </div>\r\n        <Button id='login-button' variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import blogService from '../services/blogs'\r\nimport { changeNotification } from './notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'LIKE_BLOG':\r\n    return state.map(x => x.id !== action.data.id ? x : { ...action.data, likes : action.data.likes + 1 } )\r\n  case 'DELETE_BLOG':\r\n    return state.filter(x => x.id !== action.data.id)\r\n  case 'COMMENT_BLOG':\r\n    return state.map(x => x.id !== action.data.blog.id ? x : { ...action.data.blog, comments : action.data.commentedBlog.comments })\r\n  default:\r\n    return state\r\n  }\r\n}\r\nexport const commentBlog = (blog,comment) => {\r\n  return async dispatch => {\r\n    const commentedBlog = await blogService.addComment(blog.id,{ comment: comment })\r\n    dispatch({\r\n      type: 'COMMENT_BLOG',\r\n      data: { blog,commentedBlog }\r\n    })\r\n  }\r\n}\r\nexport const deleteBlog = blog => {\r\n  return async dispatch => {\r\n    try {\r\n      await blogService.remove(blog.id)\r\n      dispatch({\r\n        type: 'DELETE_BLOG',\r\n        data: blog\r\n      })\r\n      dispatch(changeNotification(`${blog.title} Deleted Succesfully`,5))\r\n    } catch (excpetion) {\r\n      dispatch(changeNotification(`${blog.title} Failed to Delete`,5))\r\n    }\r\n  }\r\n}\r\nexport const likeBlog = blog => {\r\n  return async dispatch => {\r\n    await blogService.update(blog.id, { ...blog, likes: blog.likes + 1 })\r\n    dispatch({\r\n      type: 'LIKE_BLOG',\r\n      data: blog\r\n    })\r\n  }\r\n}\r\nexport const createNewBlog = blog => {\r\n  return async dispatch => {\r\n    try {\r\n      const newBlog = await blogService.create(blog)\r\n      dispatch({\r\n        type:'NEW_BLOG',\r\n        data: newBlog\r\n      })\r\n      dispatch(initializeBlogs())\r\n      dispatch(changeNotification(`${blog.title} Added Succesfully`,5))\r\n    } catch (exception) {\r\n      dispatch(changeNotification(`${blog.title} Failed to Add`,5))\r\n    }\r\n  }\r\n}\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewBlog } from '../reducers/blogReducer'\r\n\r\nconst Blogs = ({ toggleVisibility }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const handleCreate = (event) => {\r\n    event.preventDefault()\r\n    dispatch(createNewBlog({\r\n      title: title,\r\n      url: url,\r\n      author: author\r\n    }))\r\n    toggleVisibility()\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create New Blog</h2>\r\n      <form onSubmit={handleCreate}>\r\n        <div>\r\n          <TextField\r\n            label=\"Title\"\r\n            id=\"title\"\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={({ target }) => setTitle(target.value)}/>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"Author\"\r\n            id=\"author\"\r\n            value={author}\r\n            name=\"author\"\r\n            onChange={({ target }) => setAuthor(target.value)}/>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label=\"URL\"\r\n            id=\"url\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={({ target }) => setUrl(target.value)}/>\r\n        </div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleVisibility}>cancel</Button> <Button id='create-blog' variant=\"contained\" color=\"primary\"  type=\"submit\">Create</Button>\r\n      </form><br/>\r\n    </div>)\r\n}\r\nBlogs.propTypes = {\r\n  toggleVisibility: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst Notification = () => {\r\n  const message = useSelector(state => state.notification)\r\n\r\n  if (message==='') {\r\n    return  null\r\n  }\r\n  if (message.includes('Failed')){\r\n    return (\r\n      <Alert className='message' severity=\"error\">\r\n        {message}\r\n      </Alert>\r\n    )\r\n  }\r\n  if (message.includes('Information')) {\r\n    return (\r\n      <Alert className='message'  severity=\"info\">\r\n        {message}\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Alert className='message' severity=\"success\">\r\n      {message}\r\n    </Alert>\r\n  )\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n}\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from '@material-ui/core'\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  return (\r\n    <div id='create blog'>\r\n      <div style={hideWhenVisible}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\nTogglable.displayName ='Toggleable'\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\nexport default Togglable","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\nconst BlogList = ({ blogs }) => {\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ maxHeight: 370, overflow: 'auto', background: 'whitesmoke' }}>\r\n      <Table>\r\n        <TableBody id='Blogs'>\r\n          <TableRow>\r\n            <TableCell>\r\n              <h3>Title</h3>\r\n            </TableCell>\r\n            <TableCell>\r\n              <h3>Author</h3>\r\n            </TableCell>\r\n          </TableRow>\r\n          {blogs.sort((x, y) => y.likes - x.likes).map(blog =>\r\n            <TableRow key={blog.id} className='blog'>\r\n              <TableCell>\r\n                <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n              </TableCell>\r\n              <TableCell>{blog.author}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default BlogList","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst functions = { getAll }\r\n\r\nexport default functions","import usersService from '../services/users'\r\nconst allUsersReducer = (state=[],action) => {\r\n  switch(action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await usersService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\nexport default allUsersReducer","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeUsers } from '../reducers/allUsersReducer'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\nconst Users = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector(state => state.allUsers)\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  },[])\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <TableContainer component={Paper} style={{ maxHeight: 426, overflow: 'auto' ,background: 'whitesmoke' }}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n                <h3>Usernames</h3>\r\n              </TableCell>\r\n              <TableCell>\r\n                <h3>Blogs created</h3>\r\n              </TableCell>\r\n            </TableRow>\r\n            {users.map(x =>\r\n              <TableRow key={x.id}>\r\n                <TableCell>\r\n                  <Link to={`/users/${x.id}`}>{x.username} </Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {x.blogs.length}\r\n                </TableCell>\r\n              </TableRow>)}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport {\r\n  List,ListItem,Paper\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nconst UserView = ({ user }) => {\r\n  if (!user){\r\n    return null\r\n  }\r\n  return(\r\n    <div>\r\n      <h2>{user.username}</h2>\r\n      <h3>Added Blogs</h3>\r\n      <Paper style={{ maxHeight: 380, overflow: 'auto', background: 'whitesmoke' }}>\r\n        <List>\r\n          {user.blogs.map(x =>\r\n            <ListItem key={x.id}>\r\n              <Link to={`/blogs/${x.id}`}>{x.title}</Link>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserView","import React, { useState } from 'react'\r\nimport { likeBlog, deleteBlog, commentBlog } from '../reducers/blogReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { TextField, Button,List,ListItem, Paper } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst BlogView =({ blog }) => {\r\n  const [comment,setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const user = useSelector(state => state.user)\r\n\r\n  const like = async (blog) => {\r\n    dispatch(likeBlog(blog))\r\n  }\r\n\r\n  const remove = async (blog) => {\r\n    if (window.confirm(`Remove ${blog.title} by ${blog.author}`)) {\r\n      dispatch(deleteBlog(blog))\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const addComment = async(blog) => {\r\n    dispatch(commentBlog(blog,comment))\r\n    setComment('')\r\n  }\r\n\r\n  if (!blog){\r\n    return null\r\n  }\r\n  return(\r\n    <div>\r\n      <h2>{blog.title} {blog.author}</h2>\r\n      <a href={blog.url} rel=\"noreferrer\" target={'_blank'}>{blog.url}</a><br />\r\n      {blog.likes} likes <Button variant=\"outlined\" onClick={() => like(blog)}>like</Button><br />\r\n      added by {blog.user.username}<br />\r\n      {user.username === blog.user.username ? <Button variant=\"contained\"  id='delete-button' onClick={() => remove(blog)}>remove</Button> : ''}\r\n      <h3>Comments</h3>\r\n      <TextField\r\n        fullWidth\r\n        label='Comment here'\r\n        id=\"comment\"\r\n        value={comment}\r\n        name=\"comment\"\r\n        onChange={({ target }) => setComment(target.value)}/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => addComment(blog)}>add comment</Button>\r\n      <List component={Paper} style={{ maxHeight: 300, overflow: 'auto',  background: 'whitesmoke' }}>\r\n        {blog.comments.map((x,i) => <ListItem key={i}>{x}</ListItem>)}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogView","import React, { useEffect, useRef } from 'react'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogsForm from './components/BlogsForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Toggleable'\r\nimport BlogList from './components/BlogList'\r\nimport { changeNotification } from './reducers/notificationReducer'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { initializeUser, logoutUser } from './reducers/userReducer'\r\nimport {\r\n  Link, Switch, Route,useRouteMatch, useHistory\r\n} from 'react-router-dom'\r\nimport Users from './components/Users'\r\nimport { initializeUsers } from './reducers/allUsersReducer'\r\nimport UserView from './components/UserView'\r\nimport BlogView from './components/BlogView'\r\nimport {\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  Button\r\n} from '@material-ui/core'\r\n\r\nconst App = () => {\r\n  const blogsFormRef = useRef()\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector(state => state.blogs)\r\n  const user = useSelector(state => state.user)\r\n  const allUsers = useSelector(state => state.allUsers)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUser())\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  const usermatch = useRouteMatch('/users/:id')\r\n  const userToView = usermatch\r\n    ? allUsers.find(x => x.id === usermatch.params.id)\r\n    : null\r\n  const blogmatch = useRouteMatch('/blogs/:id')\r\n  const blogToView = blogmatch\r\n    ? blogs.find(x => x.id === blogmatch.params.id)\r\n    : null\r\n\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser())\r\n    dispatch(changeNotification(`${user.username} logged out succesfully`, 5))\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h2>Blogs Application</h2>\r\n        <Notification/>\r\n        {user === null\r\n          ? <LoginForm />\r\n          :<div>\r\n            <AppBar position='static'>\r\n              <Toolbar>\r\n                <Button color=\"inherit\" component={Link} to=\"/\">\r\n                   Blogs\r\n                </Button>\r\n                <Button color=\"inherit\" component={Link} to=\"/users\">\r\n                  Users\r\n                </Button>\r\n                <em>{user.username} logged in</em> <Button color=\"inherit\" onClick={handleLogout}>logout</Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Switch>\r\n\r\n              <Route path=\"/blogs/:id\">\r\n                <BlogView blog={blogToView}/>\r\n              </Route>\r\n\r\n              <Route path=\"/users/:id\">\r\n                <UserView user={userToView}/>\r\n              </Route>\r\n\r\n              <Route path=\"/users\">\r\n                <Users/>\r\n              </Route>\r\n\r\n              <Route path=\"/\">\r\n                <h2>Blogs</h2>\r\n                <Togglable buttonLabel=\"create new blog\" ref={blogsFormRef}>\r\n                  <BlogsForm toggleVisibility={() => blogsFormRef.current.toggleVisibility()} />\r\n                </Togglable><br/>\r\n                <BlogList blogs={blogs}/>\r\n              </Route>\r\n\r\n            </Switch>\r\n          </div>}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers,  applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './reducers/userReducer'\r\nimport allUsersReducer from './reducers/allUsersReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n  allUsers: allUsersReducer\r\n})\r\n\r\nconst store = createStore(reducer,\r\n  composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><Provider store={store}><App /></Provider></Router>, document.getElementById('root'))"],"sourceRoot":""}